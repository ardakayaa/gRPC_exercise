# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import stringer_pb2 as stringer__pb2


class StringerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.addstring_id = channel.unary_unary(
        '/Stringer/addstring_id',
        request_serializer=stringer__pb2.ResultRequest.SerializeToString,
        response_deserializer=stringer__pb2.ResultResponse.FromString,
        )


class StringerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def addstring_id(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_StringerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'addstring_id': grpc.unary_unary_rpc_method_handler(
          servicer.addstring_id,
          request_deserializer=stringer__pb2.ResultRequest.FromString,
          response_serializer=stringer__pb2.ResultResponse.SerializeToString,
      ),
  }
  ge
  neric_handler = grpc.method_handlers_generic_handler(
      'Stringer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
